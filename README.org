#+STARTUP: showeverything

#+NAME: parser-generation
#+BEGIN_SRC sh
  antlr4 -Dlanguage=Java -no-listener -no-visitor -package sentient -o ./src/java/sentient ./src/antlr/CSVTranslator.g4
  antlr4 -Dlanguage=Java -no-listener -no-visitor -package sentient -o ./src/java/sentient ./src/antlr/CSVDatasetSplitter.g4
  antlr4 -Dlanguage=Java -no-listener -no-visitor -package sentient -o ./src/java/sentient ./src/antlr/CSVStream.g4
  antlr4 -Dlanguage=Java -no-listener -no-visitor -package sentient -o ./src/java/sentient ./src/antlr/DictionaryList.g4
#+END_SRC

#+NAME: splitting-training-testing-datasets
#+BEGIN_SRC sh
  lein exec -p bin/translate-kaggle-sentiment140 dataset/kaggle-sentiment140.csv dataset/kaggle-sentiment140-translated.csv
  lein exec -p bin/split-training-testing-sets dataset/kaggle-sentiment140-translated.csv dataset/kaggle-sentiment140-training.csv dataset/kaggle-sentiment140-testing.csv
#+END_SRC

#+NAME: compiling-protobuf
#+BEGIN_SRC sh
  protoc -I./src/protobuf --python_out=./src/python/sentient csv.proto
  protoc -I./src/protobuf --java_out=./src/java csv.proto
#+END_SRC

#+NAME: preprocessing-datasets
#+BEGIN_SRC sh
  lein exec -p bin/file-parser-service # starts the parser service (note the $SERVICE_PORT printed to the terminal)
  python code/preprocess.py dataset/kaggle-sentiment140-training.csv $SERVICE_PORT
  python code/preprocess.py dataset/kaggle-sentiment140-testing.csv $SERVICE_PORT
  python code/baseline.py $SERVICE_PORT
#+END_SRC
